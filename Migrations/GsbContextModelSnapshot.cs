// <auto-generated />
using System;
using GsbApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GsbApp.Migrations
{
    [DbContext(typeof(GsbContext))]
    partial class GsbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("GsbApp.Models.Commercial", b =>
                {
                    b.Property<int>("IdCommercial")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Adress")
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .HasColumnType("TEXT");

                    b.Property<int>("CodePostal")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("IdCommercial");

                    b.ToTable("Commercials");
                });

            modelBuilder.Entity("GsbApp.Models.ExpenceReport", b =>
                {
                    b.Property<int>("IdExpenceReport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("AmountCheck")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CommercialIdCommercial")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("Document")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("FlateRateCategoryIdFlateRateCategory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCommercial")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdFlateRateCategory")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdStatus")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("StatusID")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdExpenceReport");

                    b.HasIndex("CommercialIdCommercial");

                    b.HasIndex("FlateRateCategoryIdFlateRateCategory");

                    b.HasIndex("StatusID");

                    b.ToTable("ExpenceReport");
                });

            modelBuilder.Entity("GsbApp.Models.FlateRateCategory", b =>
                {
                    b.Property<int>("IdFlateRateCategory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("IdFlateRateCategory");

                    b.ToTable("FlateRateCategory");
                });

            modelBuilder.Entity("GsbApp.Models.Status", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("GsbApp.Models.ExpenceReport", b =>
                {
                    b.HasOne("GsbApp.Models.Commercial", "Commercial")
                        .WithMany("expenceReports")
                        .HasForeignKey("CommercialIdCommercial");

                    b.HasOne("GsbApp.Models.FlateRateCategory", "FlateRateCategory")
                        .WithMany()
                        .HasForeignKey("FlateRateCategoryIdFlateRateCategory");

                    b.HasOne("GsbApp.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");

                    b.Navigation("Commercial");

                    b.Navigation("FlateRateCategory");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GsbApp.Models.Commercial", b =>
                {
                    b.Navigation("expenceReports");
                });
#pragma warning restore 612, 618
        }
    }
}
